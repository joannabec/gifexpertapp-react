{"version":3,"sources":["components/AddCategories.jsx","helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.jsx"],"names":["AddCategories","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","prev","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","item","ReactDOM","render","document","getElementById"],"mappings":"6MA+BeA,EA5BO,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACPC,mBAAS,IADF,mBACpCC,EADoC,KACxBC,EADwB,KAa3C,OACE,0BAAMC,SARa,SAACC,GACpBA,EAAEC,iBAEFN,GAAc,SAACO,GAAD,OAAYL,GAAZ,mBAA2BK,OACzCJ,EAAc,MAKZ,2BACEK,KAAK,OACLC,MAAOP,EACPQ,SAhBoB,SAACL,GACzBF,EAAcE,EAAEM,OAAOF,Y,uBCUZG,EAhBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACRC,EADQ,0FACiFC,UAAUH,GAD3F,sBAEKI,MAAMF,GAFX,cAERG,EAFQ,gBAGSA,EAAKC,OAHd,uBAGNC,EAHM,EAGNA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAD,YACpB,CACEC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATxB,kBAaPM,GAbO,4CAAH,sDCeEO,EAZK,SAAC,GAAD,IAAGH,EAAH,EAAGA,MAAOV,EAAV,EAAUA,IAAV,OAClB,yBAAKc,UAAU,0CACb,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCyBOO,EAzBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFN,SAACA,GAAc,IAAD,EACdZ,mBAAS,CACjCmB,KAAM,GACNa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAaxC,OAPAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAACC,GAAD,OAAUH,EAAS,CACxCf,KAAMkB,EACNL,SAAS,SAEV,CAACpB,IAEGqB,EDT2BK,CAAa1B,GAAjCa,EAFkB,EAExBN,KAAca,EAFU,EAEVA,QAEtB,OACE,oCACE,4BAAKpB,GACHoB,GAAW,uCACb,yBAAKJ,UAAU,kBAEZH,EAAOJ,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eACEiB,IAAKjB,EAAIC,IACLD,UEKDkB,EApBM,WAAO,IAAD,EACWxC,mBAAS,IADpB,mBAClByC,EADkB,KACN1C,EADM,KAGzB,OACE,oCACE,4CAEA,kBAAC,EAAD,CAAeA,cAAeA,IAC9B,6BAEA,4BAEG0C,EAAWpB,KAAI,SAACqB,GAAD,OACd,kBAAC,EAAD,CAASH,IAAKG,EAAM9B,SAAU8B,UCZxCC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.44db1111.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategories = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('');\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    setCategories((prev) => ([inputValue, ...prev]));\n    setInputValue('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n      />\n    </form>\n  );\n};\n\nAddCategories.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n\nexport default AddCategories;\n","const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=TFntoeqNb7U5KRQ3in8M0ZX238w4pzw1&q=${encodeURI(category)}&limit=10`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const gifs = data.map((img) => (\n    {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    }\n  ));\n\n  return gifs;\n};\n\nexport default getGifs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst GifGridItem = ({ title, url }) => (\n  <div className=\"card animate__animated animate__fadeIn\">\n    <img src={url} alt={title} />\n    <p>{title}</p>\n  </div>\n);\n\nGifGridItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n};\n\nexport default GifGridItem;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({ category }) => {\n  // Custom hook\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3>{category}</h3>\n      { loading && <p>Cargando</p> }\n      <div className=\"card-container\">\n        {/* Las cards individuales */}\n        {images.map((img) => (\n          <GifGridItem\n            key={img.id}\n            {...img}\n          />\n        ))}\n      </div>\n    </>\n  );\n};\n\nGifGrid.propTypes = {\n  category: PropTypes.string.isRequired,\n};\n\nexport default GifGrid;\n","/* eslint-disable import/prefer-default-export */\nimport { useState, useEffect } from 'react';\nimport getGifs from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => setState({\n      data: imgs,\n      loading: false,\n    }));\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from 'react';\nimport AddCategories from './components/AddCategories';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState([]);\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      {/* Componente del input */}\n      <AddCategories setCategories={setCategories} />\n      <hr />\n\n      <ol>\n        {/* Componente donde van el tÃ­tulo y las cards */}\n        {categories.map((item) => (\n          <GifGrid key={item} category={item} />\n        ))}\n      </ol>\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}